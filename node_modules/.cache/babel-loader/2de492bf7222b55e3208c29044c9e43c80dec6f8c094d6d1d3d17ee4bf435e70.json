{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abort = new AbortController();\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(\"Could not fetch the data from that resource\");\n      }\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      setData(data);\n      setIsPending(false);\n      setError(null);\n    }).catch(err => {\n      if (err.name === 'AbortError') {\n        conso;\n      }\n      setIsPending(false);\n      setError(err.message);\n    });\n    return () => abortCont.abort();\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n_s(useFetch, \"cXWu45hQE9y6Of2sqlY9XSRohsk=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","_s","data","setData","isPending","setIsPending","error","setError","abort","AbortController","fetch","signal","abortCont","then","res","ok","Error","json","console","log","catch","err","name","conso","message"],"sources":["D:/Coding/React Tutorial/react-blog/src/useFetch.js"],"sourcesContent":["import {useState, useEffect} from 'react';\r\n\r\nconst useFetch=(url)=>{\r\n    const [data,setData]= useState(null);\r\n    const [isPending,setIsPending]= useState(true);\r\n    const [error,setError]= useState(null);\r\n\r\n    useEffect(()=>{\r\n        const abort= new AbortController();\r\n\r\n        fetch(url,{signal:abortCont.signal})\r\n        .then(res=>{\r\n            if(!res.ok)\r\n            {\r\n                throw Error(\"Could not fetch the data from that resource\");\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(data=>{\r\n            console.log(data);\r\n            setData(data);\r\n            setIsPending(false);\r\n            setError(null);\r\n        })\r\n        .catch(err=>{\r\n            if(err.name==='AbortError')\r\n            {\r\n                conso\r\n            }\r\n            setIsPending(false);\r\n            setError(err.message);\r\n        })\r\n\r\n        return ()=> abortCont.abort();\r\n\r\n        },[url]);\r\n\r\n        return {data, isPending, error};   \r\n}\r\n\r\n\r\nexport default useFetch; "],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEzC,MAAMC,QAAQ,GAAEC,GAAG,IAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAEN,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACO,SAAS,EAACC,YAAY,CAAC,GAAER,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,KAAK,EAACC,QAAQ,CAAC,GAAEV,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAI;IACV,MAAMU,KAAK,GAAE,IAAIC,eAAe,CAAC,CAAC;IAElCC,KAAK,CAACV,GAAG,EAAC;MAACW,MAAM,EAACC,SAAS,CAACD;IAAM,CAAC,CAAC,CACnCE,IAAI,CAACC,GAAG,IAAE;MACP,IAAG,CAACA,GAAG,CAACC,EAAE,EACV;QACI,MAAMC,KAAK,CAAC,6CAA6C,CAAC;MAC9D;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACrB,CAAC,CAAC,CACDJ,IAAI,CAACX,IAAI,IAAE;MACRgB,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC;MACjBC,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,CACDa,KAAK,CAACC,GAAG,IAAE;MACR,IAAGA,GAAG,CAACC,IAAI,KAAG,YAAY,EAC1B;QACIC,KAAK;MACT;MACAlB,YAAY,CAAC,KAAK,CAAC;MACnBE,QAAQ,CAACc,GAAG,CAACG,OAAO,CAAC;IACzB,CAAC,CAAC;IAEF,OAAO,MAAKZ,SAAS,CAACJ,KAAK,CAAC,CAAC;EAE7B,CAAC,EAAC,CAACR,GAAG,CAAC,CAAC;EAER,OAAO;IAACE,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACvC,CAAC;AAAAL,EAAA,CApCKF,QAAQ;AAuCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}